{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/default-avatar.png","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/OneTransaction.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","defaultProps","defaultImageAvatar","getRandomColor","color","Math","floor","random","pow","toString","length","Statistics","title","statistics","statList","map","item","style","backgroundColor","percentage","id","FriendListItem","isOnline","status","isOfline","width","FriendList","friends","friendList","OneTransaction","type","amount","currency","TransactionHistory","items","transactionHistory","userProfile","App","statisticData","friendsData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d29c879f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__MZNGq\",\"avatar\":\"Profile_avatar__1jgBZ\",\"name\":\"Profile_name__2q6Bj\",\"tag\":\"Profile_tag__2SdDV\",\"location\":\"Profile_location__1AxHh\",\"stats\":\"Profile_stats__18Dsk\",\"label\":\"Profile_label__kwjDD\",\"quantity\":\"Profile_quantity__NgUMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2_-fr\",\"item\":\"FriendList_item__3AudI\",\"isOnline\":\"FriendList_isOnline__7HItb\",\"isOfline\":\"FriendList_isOfline__aZyR6\",\"avatar\":\"FriendList_avatar__1zo_k\",\"name\":\"FriendList_name__zEA1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1Vlw6\",\"title\":\"Statistics_title__3qbp2\",\"statList\":\"Statistics_statList__323tS\",\"item\":\"Statistics_item__27B-r\",\"label\":\"Statistics_label__2_1r_\",\"percentage\":\"Statistics_percentage__17wg1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1FmXw\"};","export default __webpack_public_path__ + \"static/media/default-avatar.3d7dc8a8.png\";","import React from 'react';\r\nimport styles from './Profile.module.css'; //импорт стилей для компонента\r\nimport PropTypes from 'prop-types'; //импорт библиотеки для валидации пропсов\r\nimport defaultImageAvatar from './default-avatar.png'; //импорт дефолтной картинки для автвра\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img src={avatar} alt={name} className={styles.avatar} />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>@{tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={styles.stats}>\r\n        <li>\r\n          <span className={styles.label}>Followers</span>\r\n          <span className={styles.quantity}> {stats.followers} </span>\r\n        </li>\r\n        <li>\r\n          <span className={styles.label}>Views</span>\r\n          <span className={styles.quantity}> {stats.views} </span>\r\n        </li>\r\n        <li>\r\n          <span className={styles.label}>Likes</span>\r\n          <span className={styles.quantity}> {stats.likes} </span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\n//Дефолтная картинка для аватарки\r\nProfile.defaultProps = {\r\n  avatar: defaultImageAvatar,\r\n};\r\n\r\n//Проверка типов получаемых пропсов\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//функция рандомного цвета для фона лишки\r\nconst getRandomColor = () => {\r\n  let color = Math.floor(Math.random() * Math.pow(256, 3)).toString(16);\r\n  while (color.length < 6) {\r\n    color = \"0\" + color;\r\n  }\r\n  return \"#\" + color;\r\n};\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={styles.statistics}>\r\n      {title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n      <ul className={styles.statList}>\r\n        {stats.map((item) => {\r\n          return (\r\n            <li key={item.id} className={styles.item} style={{ backgroundColor: getRandomColor() }}>\r\n              <span className={styles.label}>{item.label} </span>\r\n              <span className={styles.percentage}>{item.percentage}%</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.defaultProps = {\r\n  title: \"\",\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport styles from './FriendList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  const status = isOnline ? styles.isOnline : styles.isOfline;\r\n  return (\r\n    <>\r\n      <span className={status}>{isOnline}</span>\r\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FriendListItem;\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n","import React from 'react';\r\nimport styles from './FriendList.module.css';\r\nimport FriendListItem from './FriendListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={styles.friendList}>\r\n      {friends.map(({ id, avatar, name, isOnline }) => (\r\n        <li key={id} className={styles.item}>\r\n          <FriendListItem avatar={avatar} name={name} isOnline={isOnline} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FriendList;\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\n// import styles from \"./TransactionHistory.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst OneTransaction = ({ type, amount, currency }) => {\r\n  return (\r\n    <>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OneTransaction;\r\n\r\nOneTransaction.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport OneTransaction from './OneTransaction';\r\nimport styles from './TransactionHistory.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={styles.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => (\r\n          <tr key={id}>\r\n            <OneTransaction type={type} amount={amount} currency={currency} />\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory;\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","//Компоненты\nimport Profile from './components/Profile/Profile'; //импорт компонента профиля соц сети\nimport Statistics from './components/Statistics/Statistics'; // импорт компонента статистики\nimport FriendList from './components/FriendList/FriendList'; //// импорт компонента списка друзей\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory'; //импорт компонента транзакций\n\n//Стили\nimport './App.css';\n\n//Данные для пропсов\nimport userProfile from './db/user.json'; // импорт данных о пользователе компонента Profile\nimport statisticData from './db/statistical-data.json'; // импорт данных ститистики\nimport friendsData from './db/friends.json'; // импорт данных друзей\nimport transactions from './db/transactions.json'; //импорт данных транзакций\n\nconst { name, tag, location, avatar, stats } = userProfile; //деструктуризация объекта данных\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h3>Профиль социальной сети</h3>\n      <Profile\n        name={name}\n        tag={tag}\n        location={location}\n        avatar={avatar}\n        stats={stats}\n      />\n      <h3>Секция статистики</h3>\n      <Statistics title=\"\" stats={statisticData} />\n      <h3>Список друзей</h3>\n      <FriendList friends={friendsData} />\n      <h3>История транзакций</h3>\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}